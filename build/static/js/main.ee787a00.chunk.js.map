{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/InputTasks.jsx","components/TaskList.jsx","components/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","title","showAddTask","toggleShowAddTask","location","useLocation","Grid","container","item","justify","alignItems","Typography","variant","component","pathname","Button","color","onClick","Footer","direction","align","Date","getFullYear","to","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","InputTasks","onAdd","classes","useState","text","setText","toString","split","toISOString","day","setDay","reminder","setReminder","className","noValidate","onSubmit","e","preventDefault","alert","TextField","required","fullWidth","id","label","name","autoFocus","helperText","value","onChange","target","InputLabelProps","shrink","type","FormControlLabel","control","Checkbox","checked","currentTarget","list","TaskList","tasks","onDelete","onToggle","List","length","map","task","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","secondary","toLocaleString","ListItemSecondaryAction","IconButton","edge","aria-label","generateList","About","createMuiTheme","palette","main","light","background","default","appMain","height","padding","mainItem","paper","display","App","setShowAddTask","setTasks","fetchTasks","a","fetch","res","json","data","fetchTask","useEffect","tasksFromServer","getTasks","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","newTask","ThemeProvider","sm","md","lg","Paper","path","exact","render","props","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee787a00.chunk.js","sourcesContent":["// import React from 'react'\n// import PropTypes from 'prop-types';\n\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { useLocation } from 'react-router-dom';\n\n\n\nconst Header = ({ title, showAddTask, toggleShowAddTask }) => {\n\n  const location = useLocation();\n\n  return (\n    <Grid\n      container\n      item\n      justify=\"space-between\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography\n          variant=\"h6\"\n          component=\"div\"\n        >{title}</Typography>\n      </Grid>\n      <Grid item>\n        {\n          location.pathname === '/React-Task-Tracker' && <Button\n            variant=\"contained\"\n            color={showAddTask ? \"secondary\" : \"primary\"}\n            onClick={toggleShowAddTask}\n          >{showAddTask ? \"Close\" : \"Add\"}</Button>\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\n// Header.defaultProps = {\n//   title: 'Task Tracker'\n// };\n\n// Header.prototype = {\n//   title: PropTypes.string\n// };\n\nexport default Header;\n","import { Grid, Typography } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\nimport React from 'react';\n\nconst Footer = () => {\n  const location = useLocation();\n\n  return (\n    <Grid\n      item\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright Â© '}\n          {' '}\n          {new Date().getFullYear()}\n          {\n            location.pathname === '/React-Task-Tracker' ?\n              (\n                <>\n                  <br />\n                  <Link to=\"/React-Task-Tracker/about\"> About </Link>\n                </>\n              )\n              :\n              <>\n                <br />\n                <Link to=\"/React-Task-Tracker\">Go back</Link>\n              </>\n          }\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import { Button, Checkbox, FormControlLabel, Grid, makeStyles, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\n\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const InputTasks = ({ onAdd }) => {\n  const classes = useStyles();\n\n  const [text, setText] = useState('');\n  const [day, setDay] = useState(\n    new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0]\n  );\n  const [reminder, setReminder] = useState(false);\n\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert('Please add a Task');\n    }\n    else {\n      onAdd({ text, day, reminder });\n\n      setText(\"\");\n      setDay(new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0]);\n      setReminder(false);\n    }\n  };\n\n  return (\n    <Grid container item>\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"task\"\n          label=\"Task\"\n          name=\"task\"\n          autoFocus\n          helperText=\"Please add a task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"daytime\"\n          label=\"Day & Time\"\n          InputLabelProps={{ shrink: true, required: true }}\n\n          type=\"datetime-local\"\n          id=\"daytime\"\n\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              color=\"primary\"\n              checked={reminder}\n              value={reminder}\n              onChange={(e) => setReminder(e.currentTarget.checked)}\n            />}\n\n          label=\"Set Reminder\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Save Task\n        </Button>\n      </form>\n    </Grid>\n  );\n};\n\nexport default InputTasks;","import { Avatar, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core';\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\nimport AlarmOffIcon from '@material-ui/icons/AlarmOff';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: \"100%\"\n  },\n\n}));\n\n\n\n\n\n\nconst TaskList = ({ tasks, onDelete, onToggle }) => {\n  const classes = useStyles();\n\n  const generateList = (task) => {\n    return (\n      <ListItem key={task.id} button onClick={() => onToggle(task.id)}>\n        <ListItemAvatar>\n          <Avatar>\n            {task.reminder ? <AlarmOnIcon color=\"primary\" /> : <AlarmOffIcon color=\"primary\" />}\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={task.text}\n          secondary={(new Date(task.day)).toLocaleString()}\n        />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onDelete(task.id)}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n\n      </ListItem>\n    );\n  };\n\n  return (\n\n    <Grid container item>\n      <List className={classes.list}>\n        {\n          (tasks.length > 0) ? tasks.map(task => generateList(task)) : <ListItem>\n            <ListItemText primary=\"No Tasks to show...\" />\n          </ListItem>\n        }\n      </List>\n    </Grid>\n  );\n};\n\nexport default TaskList;\n","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\n\n\nconst About = () => {\n  return (\n    <Grid\n      item\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          Version 1.0.0\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default About;\n","import { createMuiTheme, CssBaseline, Grid, makeStyles, Paper, ThemeProvider } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport InputTasks from './components/InputTasks';\nimport TaskList from './components/TaskList';\nimport About from './components/About';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000\",\n      light: \"#00026\"\n    },\n    secondary: {\n      main: \"#d32f2f\",\n      light: \"#d32f2f26\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appMain: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: theme.spacing(2),\n  },\n  mainItem: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  paper: {\n    width: \"auto\",\n    display: \"block\",\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction App () {\n  const classes = useStyles();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('https://my-json-server.typicode.com/abshekh/typicode-demo/tasks');\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`https://my-json-server.typicode.com/abshekh/typicode-demo/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`https://my-json-server.typicode.com/abshekh/typicode-demo/tasks/${id}`, {\n      method: 'DELETE'\n    });\n\n    setTasks(tasks.filter((tasks) => tasks.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`https://my-json-server.typicode.com/abshekh/typicode-demo/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n\n    const data = await res.json();\n\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: data.reminder } : task));\n  };\n\n  // Add Tasks\n  const addTask = async (newTask) => {\n    // newTask.id = Date.now();\n    // setTasks([newTask, ...tasks]);\n\n    const res = await fetch(`https://my-json-server.typicode.com/abshekh/typicode-demo/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  return (\n    <Router>\n\n      <ThemeProvider theme={theme}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.appMain}\n        >\n          <Grid item sm={10} md={6} lg={4} className={classes.mainItem} >\n            <Paper className={classes.paper}>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n              >\n                <Header title=\"Task Tracker\" toggleShowAddTask={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask} />\n\n                <Route path=\"/React-Task-Tracker/\" exact render={(props) => (\n                  <>\n                    {showAddTask && <InputTasks onAdd={addTask} />}\n                    <TaskList tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n                  </>\n                )} />\n                <Route path=\"/React-Task-Tracker/about\" exact component={About} />\n\n                <Footer />\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n        <CssBaseline />\n      </ThemeProvider >\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}